<?php

/**
 * Implements hook_form_alter().
 */
function securelogin_form_alter(&$form, &$form_state, $form_id) {

  // Load Securelogin configuration
  $securelogin_conf = \Drupal::config('securelogin.settings');
  $securelogin_other_forms = $securelogin_conf->get('other_forms');

  $form['#securelogin'] = FALSE;
  // Changing the form id to the base form allows us to match all node forms
  // since the form id will be 'node_form'
  if (isset($form_state['build_info']['base_form_id'])) {
    $form_id = $form_state['build_info']['base_form_id'];
  }
  if ($securelogin_conf->get('all_forms')) {
    $form['#securelogin'] = TRUE;
  }
  elseif ($securelogin_conf->get('form_' . $form_id)) {
    $form['#securelogin'] = TRUE;
  }
  elseif (!empty($securelogin_other_forms) && in_array($form_id, explode(' ', $securelogin_other_forms))) {
    $form['#securelogin'] = TRUE;
  }
  if ($form['#securelogin']) {
    \Drupal::service('securelogin.manager')->redirect();
  }

}

/**
 * Implements hook_help().
 */
function securelogin_help($path, $arg) {
  switch($path) {
    case 'admin/help#securelogin':
      return t('Enables passwords to be sent over a secure connection.');
    case 'admin/config/people/securelogin':
      return t('Secure Login allows user login and other forms to be submitted to a configurable secure (HTTPS) URL from the insecure (HTTP) site. By securing the user login forms, a site can enforce secure authenticated sessions, which are immune to <a href="http://en.wikipedia.org/wiki/Session_hijacking">session sidejacking</a>.');
  }
}
